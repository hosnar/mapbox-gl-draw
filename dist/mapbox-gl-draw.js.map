{"version":3,"file":"mapbox-gl-draw.js","sources":["../src/lib/mode_handler.js","../node_modules/wgs84/index.js","../node_modules/@mapbox/geojson-area/index.js","../src/constants.js","../src/lib/sort_features.js","../src/lib/map_event_to_bounding_box.js","../src/lib/string_set.js","../src/lib/features_at.js","../src/lib/get_features_and_set_cursor.js","../src/lib/euclidean_distance.js","../src/lib/is_click.js","../src/lib/is_tap.js","../src/lib/id.js","../node_modules/nanoid/non-secure/index.js","../src/feature_types/feature.js","../src/feature_types/point.js","../src/feature_types/line_string.js","../src/feature_types/polygon.js","../src/feature_types/multi_feature.js","../src/modes/mode_interface_accessors.js","../src/modes/mode_interface.js","../src/modes/object_to_mode.js","../src/lib/to_dense_array.js","../src/render.js","../src/store.js","../src/ui.js","../src/setup.js","../src/events.js","../src/lib/theme.js","../src/lib/common_selectors.js","../node_modules/@mapbox/point-geometry/index.js","../src/lib/mouse_event_point.js","../src/lib/create_vertex.js","../src/lib/create_midpoint.js","../src/lib/create_supplementary_points.js","../src/lib/double_click_zoom.js","../src/lib/constrain_feature_movement.js","../src/lib/move_features.js","../src/modes/simple_select.js","../src/modes/direct_select.js","../src/modes/draw_point.js","../src/lib/is_event_at_coordinates.js","../src/modes/draw_polygon.js","../src/modes/draw_line_string.js","../src/modes/index.js","../src/options.js","../node_modules/fast-deep-equal/index.js","../node_modules/@mapbox/geojson-normalize/index.js","../src/lib/string_sets_are_equal.js","../src/api.js","../index.js"],"sourcesContent":["\nconst ModeHandler = function(mode, DrawContext) {\n\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nexport default ModeHandler;\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}","export const classes = {\n  CANVAS: 'mapboxgl-canvas',\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_PROPERTIES: 'change_properties',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n","import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants.js';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  MultiLineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n","/**\n * Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.\n */\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\n  return [\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\n  ];\n}\n\nexport default mapEventToBoundingBox;\n","function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n  for (let i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\n    else this._nums[items[i]] = i;\n\n  }\n}\n\nStringSet.prototype.add = function(x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;\n  else this._nums[x] = this._length;\n  return this;\n};\n\nStringSet.prototype.delete = function(x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\n\nStringSet.prototype.has = function(x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\n\nStringSet.prototype.values = function() {\n  const values = [];\n  Object.keys(this._items).forEach((k) => {\n    values.push({ k, v: this._items[k] });\n  });\n  Object.keys(this._nums).forEach((k) => {\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\n  });\n\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\n};\n\nStringSet.prototype.clear = function() {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\n\nexport default StringSet;\n","import sortFeatures from './sort_features.js';\nimport mapEventToBoundingBox from './map_event_to_bounding_box.js';\nimport * as Constants from '../constants.js';\nimport StringSet from './string_set.js';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id).filter(id => ctx.map.getLayer(id) != null);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n","import featuresAt from './features_at.js';\nimport * as Constants from '../constants.js';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n","export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n","import euclideanDistance from './euclidean_distance.js';\n\nconst FINE_TOLERANCE = 4;\nconst GROSS_TOLERANCE = 12;\nconst INTERVAL = 500;\n\nexport default function isClick(start, end, options = {}) {\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < fineTolerance ||\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\n}\n","import euclideanDistance from './euclidean_distance.js';\n\nexport const TAP_TOLERANCE = 25;\nexport const TAP_INTERVAL = 250;\n\nexport default function isTap(start, end, options = {}) {\n  const tolerance = (options.tolerance != null) ? options.tolerance : TAP_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : TAP_INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < tolerance && (end.time - start.time) < interval;\n}\n","import {customAlphabet} from 'nanoid/non-secure';\n\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 32);\n\nexport function generateID() {\n  return nanoid();\n}\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size | 0\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size | 0\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","import {generateID} from '../lib/id.js';\nimport * as Constants from '../constants.js';\n\nconst Feature = function(ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || generateID();\n  this.type = geojson.geometry.type;\n};\n\nFeature.prototype.changed = function() {\n  this.ctx.store.featureChanged(this.id);\n};\n\nFeature.prototype.incomingCoords = function(coords) {\n  this.setCoordinates(coords);\n};\n\nFeature.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\n\nFeature.prototype.setProperty = function(property, value) {\n  this.properties[property] = value;\n};\n\nFeature.prototype.toGeoJSON = function() {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\n\nFeature.prototype.internal = function(mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\n\nexport default Feature;\n","import Feature from './feature.js';\n\nconst Point = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nPoint.prototype = Object.create(Feature.prototype);\n\nPoint.prototype.isValid = function() {\n  return typeof this.coordinates[0] === 'number' &&\n    typeof this.coordinates[1] === 'number';\n};\n\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\n  if (arguments.length === 3) {\n    this.coordinates = [lngOrLat, lat];\n  } else {\n    this.coordinates = [pathOrLng, lngOrLat];\n  }\n  this.changed();\n};\n\nPoint.prototype.getCoordinate = function() {\n  return this.getCoordinates();\n};\n\nexport default Point;\n","import Feature from './feature.js';\n\nconst LineString = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nLineString.prototype = Object.create(Feature.prototype);\n\nLineString.prototype.isValid = function() {\n  return this.coordinates.length > 1;\n};\n\nLineString.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const id = parseInt(path, 10);\n  this.coordinates.splice(id, 0, [lng, lat]);\n};\n\nLineString.prototype.getCoordinate = function(path) {\n  const id = parseInt(path, 10);\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\n};\n\nLineString.prototype.removeCoordinate = function(path) {\n  this.changed();\n  this.coordinates.splice(parseInt(path, 10), 1);\n};\n\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\n  const id = parseInt(path, 10);\n  this.coordinates[id] = [lng, lat];\n  this.changed();\n};\n\nexport default LineString;\n","import Feature from './feature.js';\n\nconst Polygon = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\n};\n\nPolygon.prototype = Object.create(Feature.prototype);\n\nPolygon.prototype.isValid = function() {\n  if (this.coordinates.length === 0) return false;\n  return this.coordinates.every(ring => ring.length > 2);\n};\n\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\nPolygon.prototype.incomingCoords = function(coords) {\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\n  this.changed();\n};\n\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\nPolygon.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n\n  const ring = this.coordinates[ids[0]];\n\n  ring.splice(ids[1], 0, [lng, lat]);\n};\n\nPolygon.prototype.removeCoordinate = function(path) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  if (ring) {\n    ring.splice(ids[1], 1);\n    if (ring.length < 3) {\n      this.coordinates.splice(ids[0], 1);\n    }\n  }\n};\n\nPolygon.prototype.getCoordinate = function(path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\n};\n\nPolygon.prototype.getCoordinates = function() {\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\n};\n\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\n  this.changed();\n  const parts = path.split('.');\n  const ringId = parseInt(parts[0], 10);\n  const coordId = parseInt(parts[1], 10);\n\n  if (this.coordinates[ringId] === undefined) {\n    this.coordinates[ringId] = [];\n  }\n\n  this.coordinates[ringId][coordId] = [lng, lat];\n};\n\nexport default Polygon;\n","import {generateID} from '../lib/id.js';\nimport Feature from './feature.js';\nimport * as Constants from '../constants.js';\n\nimport MultiPoint from './point.js';\nimport MultiLineString from './line_string.js';\nimport MultiPolygon from './polygon.js';\n\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\n\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\n\nconst MultiFeature = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\n\nMultiFeature.prototype = Object.create(Feature.prototype);\n\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: generateID(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\n\nMultiFeature.prototype.isValid = function() {\n  return this.features.every(f => f.isValid());\n};\n\nMultiFeature.prototype.setCoordinates = function(coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\n\nMultiFeature.prototype.getCoordinate = function(path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\n\nMultiFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\n\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.removeCoordinate = function(path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\n\nMultiFeature.prototype.getFeatures = function() {\n  return this.features;\n};\n\nexport default MultiFeature;\n","import * as Constants from '../constants.js';\nimport featuresAt from '../lib/features_at.js';\nimport Point from '../feature_types/point.js';\nimport LineString from '../feature_types/line_string.js';\nimport Polygon from '../feature_types/polygon.js';\nimport MultiFeature from '../feature_types/multi_feature.js';\n\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function(features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', feature_id: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function() {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function() {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function(id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function(id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function(id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function(id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function(feature, opts = {}) {\n  return this._ctx.store.add(feature, opts);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function() {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function() {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function(actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Fire a map event\n * @name this.fire\n * @param {String} eventName - the event name.\n * @param {Object} eventData - the event data object.\n */\nModeInterface.prototype.fire = function(eventName, eventData) {\n  return this._ctx.events.fire(eventName, eventData);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function(opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function(name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function(geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function(type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function(id) {\n  return this._ctx.store.featureChanged(id);\n};\n\n","import ModeInterface from './mode_interface_accessors.js';\nexport default ModeInterface;\n\n/**\n * Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions\n */\nModeInterface.prototype.onSetup = function() {};\n\n/**\n * Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onDrag = function() {};\n\n/**\n * Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onClick = function() {};\n\n/**\n * Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseMove = function() {};\n\n/**\n * Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseDown = function() {};\n\n/**\n * Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseUp = function() {};\n\n/**\n * Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseOut = function() {};\n\n/**\n * Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyUp = function() {};\n\n/**\n * Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyDown = function() {};\n\n/**\n * Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchStart = function() {};\n\n/**\n * Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchMove = function() {};\n\n/**\n * Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchEnd = function() {};\n\n/**\n * Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTap = function() {};\n\n/**\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onStop = function() {};\n\n/**\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onTrash = function() {};\n\n/**\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onCombineFeature = function() {};\n\n/**\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onUncombineFeature = function() {};\n\n/**\n * Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\n */\nModeInterface.prototype.toDisplayFeatures = function() {\n  throw new Error('You must overwrite toDisplayFeatures');\n};\n\n","import ModeInterface from './mode_interface.js';\n\nconst eventMapper = {\n  drag: 'onDrag',\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseout: 'onMouseOut',\n  keyup: 'onKeyUp',\n  keydown: 'onKeyDown',\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd',\n  tap: 'onTap'\n};\n\nconst eventKeys = Object.keys(eventMapper);\n\nexport default function(modeObject) {\n  const modeObjectKeys = Object.keys(modeObject);\n\n  return function(ctx, startOpts = {}) {\n    let state = {};\n\n    const mode = modeObjectKeys.reduce((m, k) => {\n      m[k] = modeObject[k];\n      return m;\n    }, new ModeInterface(ctx));\n\n    function wrapper(eh) {\n      return e => mode[eh](state, e);\n    }\n\n    return {\n      start() {\n        state = mode.onSetup(startOpts); // this should set ui buttons\n\n        // Adds event handlers for all event options\n        // add sets the selector to false for all\n        // handlers that are not present in the mode\n        // to reduce on render calls for functions that\n        // have no logic\n        eventKeys.forEach((key) => {\n          const modeHandler = eventMapper[key];\n          let selector = () => false;\n          if (modeObject[modeHandler]) {\n            selector = () => true;\n          }\n          this.on(key, selector, wrapper(modeHandler));\n        });\n\n      },\n      stop() {\n        mode.onStop(state);\n      },\n      trash() {\n        mode.onTrash(state);\n      },\n      combineFeatures() {\n        mode.onCombineFeatures(state);\n      },\n      uncombineFeatures() {\n        mode.onUncombineFeatures(state);\n      },\n      render(geojson, push) {\n        mode.toDisplayFeatures(state, geojson, push);\n      }\n    };\n  };\n}\n","/**\n * Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}\n */\nfunction toDenseArray(x) {\n  return [].concat(x).filter(y => y !== undefined);\n}\n\nexport default toDenseArray;\n","import * as Constants from './constants.js';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.sources.HOT) !== undefined;\n  if (!mapExists) return cleanup();\n\n  const mode = store.ctx.events.currentModeName();\n\n  store.ctx.ui.queueMapClasses({ mode });\n\n  let newHotIds = [];\n  let newColdIds = [];\n\n  if (store.isDirty) {\n    newColdIds = store.getAllIds();\n  } else {\n    newHotIds = store.getChangedIds().filter(id => store.get(id) !== undefined);\n    newColdIds = store.sources.hot.filter(geojson => geojson.properties.id && newHotIds.indexOf(geojson.properties.id) === -1 && store.get(geojson.properties.id) !== undefined).map(geojson => geojson.properties.id);\n  }\n\n  store.sources.hot = [];\n  const lastColdCount = store.sources.cold.length;\n  store.sources.cold = store.isDirty ? [] : store.sources.cold.filter((geojson) => {\n    const id = geojson.properties.id || geojson.properties.parent;\n    return newHotIds.indexOf(id) === -1;\n  });\n\n  const coldChanged = lastColdCount !== store.sources.cold.length || newColdIds.length > 0;\n  newHotIds.forEach(id => renderFeature(id, 'hot'));\n  newColdIds.forEach(id => renderFeature(id, 'cold'));\n\n  function renderFeature(id, source) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, (geojson) => {\n      geojson.properties.mode = mode;\n      store.sources[source].push(geojson);\n    });\n  }\n\n  if (coldChanged) {\n    store.ctx.map.getSource(Constants.sources.COLD).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.sources.cold\n    });\n  }\n\n  store.ctx.map.getSource(Constants.sources.HOT).setData({\n    type: Constants.geojsonTypes.FEATURE_COLLECTION,\n    features: store.sources.hot\n  });\n\n  cleanup();\n\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}\n","import toDenseArray from './lib/to_dense_array.js';\nimport StringSet from './lib/string_set.js';\nimport render from './render.js';\nimport * as Constants from './constants.js';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.sources = {\n    hot: [],\n    cold: []\n  };\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n\n        // Fire deduplicated selection change event\n        if (this._emitSelectionChange) {\n          this.ctx.events.fire(Constants.events.SELECTION_CHANGE, {\n            features: this.getSelected().map(feature => feature.toGeoJSON()),\n            points: this.getSelectedCoordinates().map(coordinate => ({\n              type: Constants.geojsonTypes.FEATURE,\n              properties: {},\n              geometry: {\n                type: Constants.geojsonTypes.POINT,\n                coordinates: coordinate.coordinates\n              }\n            }))\n          });\n\n          this._emitSelectionChange = false;\n        }\n\n        // Fire render event\n        this.ctx.events.fire(Constants.events.RENDER, {});\n      });\n    }\n  };\n\n  this.isDirty = false;\n}\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureCreated = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    const feature = this.get(featureId);\n    this.ctx.events.fire(Constants.events.CREATE, {\n      features: [feature.toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    this.ctx.events.fire(Constants.events.UPDATE, {\n      action: options.action ? options.action : Constants.updateActions.CHANGE_COORDINATES,\n      features: [this.get(featureId).toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature, options = {}) {\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  this.featureCreated(feature.id, {silent: options.silent});\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  const deletedFeaturesToEmit = [];\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        deletedFeaturesToEmit.push(this._features[id].toGeoJSON());\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n\n  if (deletedFeaturesToEmit.length) {\n    this.ctx.events.fire(Constants.events.DELETE, {features: deletedFeaturesToEmit});\n  }\n\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this.getSelectedIds().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value, options = {}) {\n  this.get(featureId).setProperty(property, value);\n\n  this.featureChanged(featureId, {\n    silent: options.silent,\n    action: Constants.updateActions.CHANGE_PROPERTIES\n  });\n};\n\nfunction refreshSelectedCoordinates(store, options = {}) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  Constants.interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n","import * as Constants from './constants.js';\n\nconst classTypes = ['mode', 'feature', 'mouse'];\n\nexport default function(ctx) {\n\n\n  const buttonElements = {};\n  let activeButton = null;\n\n  let currentMapClasses = {\n    mode: null, // e.g. mode-direct_select\n    feature: null, // e.g. feature-vertex\n    mouse: null // e.g. mouse-move\n  };\n\n  let nextMapClasses = {\n    mode: null,\n    feature: null,\n    mouse: null\n  };\n\n  function clearMapClasses() {\n    queueMapClasses({mode:null, feature:null, mouse:null});\n    updateMapClasses();\n  }\n\n  function queueMapClasses(options) {\n    nextMapClasses = Object.assign(nextMapClasses, options);\n  }\n\n  function updateMapClasses() {\n    if (!ctx.container) return;\n\n    const classesToRemove = [];\n    const classesToAdd = [];\n\n    classTypes.forEach((type) => {\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\n\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\n      if (nextMapClasses[type] !== null) {\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\n      }\n    });\n\n    if (classesToRemove.length > 0) {\n      ctx.container.classList.remove(...classesToRemove);\n    }\n\n    if (classesToAdd.length > 0) {\n      ctx.container.classList.add(...classesToAdd);\n    }\n\n    currentMapClasses = Object.assign(currentMapClasses, nextMapClasses);\n  }\n\n  function createControlButton(id, options = {}) {\n    const button = document.createElement('button');\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\n    button.setAttribute('title', options.title);\n    options.container.appendChild(button);\n\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const clickedButton = e.target;\n      if (clickedButton === activeButton) {\n        deactivateButtons();\n        options.onDeactivate();\n        return;\n      }\n\n      setActiveButton(id);\n      options.onActivate();\n    }, true);\n\n    return button;\n  }\n\n  function deactivateButtons() {\n    if (!activeButton) return;\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\n    activeButton = null;\n  }\n\n  function setActiveButton(id) {\n    deactivateButtons();\n\n    const button = buttonElements[id];\n    if (!button) return;\n\n    if (button && id !== 'trash') {\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\n      activeButton = button;\n    }\n  }\n\n  function addButtons() {\n    const controls = ctx.options.controls;\n    const controlGroup = document.createElement('div');\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\n\n    if (!controls) return controlGroup;\n\n    if (controls[Constants.types.POINT]) {\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POINT,\n        title: `Marker tool ${ctx.options.keybindings ? '(1)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n\n    if (controls[Constants.types.LINE]) {\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_LINE,\n        title: `LineString tool ${ctx.options.keybindings ? '(2)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POLYGON]) {\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\n        title: `Polygon tool ${ctx.options.keybindings ? '(3)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls.trash) {\n      buttonElements.trash = createControlButton('trash', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\n        title: 'Delete',\n        onActivate: () => {\n          ctx.events.trash();\n        }\n      });\n    }\n\n    if (controls.combine_features) {\n      buttonElements.combine_features = createControlButton('combineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\n        title: 'Combine',\n        onActivate: () => {\n          ctx.events.combineFeatures();\n        }\n      });\n    }\n\n    if (controls.uncombine_features) {\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\n        title: 'Uncombine',\n        onActivate: () => {\n          ctx.events.uncombineFeatures();\n        }\n      });\n    }\n\n    return controlGroup;\n  }\n\n  function removeButtons() {\n    Object.keys(buttonElements).forEach((buttonId) => {\n      const button = buttonElements[buttonId];\n      if (button.parentNode) {\n        button.parentNode.removeChild(button);\n      }\n      delete buttonElements[buttonId];\n    });\n  }\n\n  return {\n    setActiveButton,\n    queueMapClasses,\n    updateMapClasses,\n    clearMapClasses,\n    addButtons,\n    removeButtons\n  };\n}\n","import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n","import setupModeHandler from './lib/mode_handler.js';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor.js';\nimport featuresAt from './lib/features_at.js';\nimport isClick from './lib/is_click.js';\nimport isTap from './lib/is_tap.js';\nimport * as Constants from './constants.js';\nimport objectToMode from './modes/object_to_mode.js';\n\nexport default function(ctx) {\n\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n\n  events.drag = function(event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n\n  events.mousedrag = function(event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n\n  events.touchdrag = function(event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n\n  events.mousemove = function(event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n\n  events.mousedown = function(event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n\n  events.mouseup = function(event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n\n  events.mouseout = function(event) {\n    currentMode.mouseout(event);\n  };\n\n  events.touchstart = function(event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n\n  events.touchmove = function(event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n\n  events.touchend = function(event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\n\n  events.keydown = function(event) {\n    const isMapElement = (event.srcElement || event.target).classList.contains(Constants.classes.CANVAS);\n    if (!isMapElement) return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n\n  events.keyup = function(event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n\n  events.zoomend = function() {\n    ctx.store.changeZoom();\n  };\n\n  events.data = function(event) {\n    if (event.dataType === 'style') {\n      const { setup, map, options, store } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\n    }\n\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach((action) => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\n  }\n\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(eventName, eventData) {\n      if (!ctx.map) return;\n      ctx.map.fire(eventName, eventData);\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n\n      ctx.container.addEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n\n  return api;\n}\n","/* eslint comma-dangle: [\"error\", \"always-multiline\"] */\n\nconst blue = '#3bb2d0';\nconst orange = '#fbb03b';\nconst white = '#fff';\n\nexport default [\n  // Polygons\n  //   Solid fill\n  //   Active state defines color\n  {\n    'id': 'gl-draw-polygon-fill',\n    'type': 'fill',\n    'filter': [\n      'all',\n      ['==', '$type', 'Polygon'],\n    ],\n    'paint': {\n      'fill-color': [\n        'case',\n        ['==', ['get', 'active'], 'true'], orange,\n        blue,\n      ],\n      'fill-opacity': 0.1,\n    },\n  },\n  // Lines\n  // Polygon\n  //   Matches Lines AND Polygons\n  //   Active state defines color\n  {\n    'id': 'gl-draw-lines',\n    'type': 'line',\n    'filter': [\n      'any',\n      ['==', '$type', 'LineString'],\n      ['==', '$type', 'Polygon'],\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round',\n    },\n    'paint': {\n      'line-color': [\n        'case',\n        ['==', ['get', 'active'], 'true'], orange,\n        blue,\n      ],\n      'line-dasharray': [\n        'case',\n        ['==', ['get', 'active'], 'true'], [0.2, 2],\n        [2, 0],\n      ],\n      'line-width': 2,\n    },\n  },\n  // Points\n  //   Circle with an outline\n  //   Active state defines size and color\n  {\n    'id': 'gl-draw-point-outer',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 7,\n        5,\n      ],\n      'circle-color': white,\n    },\n  },\n  {\n    'id': 'gl-draw-point-inner',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 5,\n        3,\n      ],\n      'circle-color': [\n        'case',\n        ['==', ['get', 'active'], 'true'], orange,\n        blue,\n      ],\n    },\n  },\n  // Vertex\n  //   Visible when editing polygons and lines\n  //   Similar behaviour to Points\n  //   Active state defines size\n  {\n    'id': 'gl-draw-vertex-outer',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'vertex'],\n      ['!=', 'mode', 'simple_select'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 7,\n        5,\n      ],\n      'circle-color': white,\n    },\n  },\n  {\n    'id': 'gl-draw-vertex-inner',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'vertex'],\n      ['!=', 'mode', 'simple_select'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 5,\n        3,\n      ],\n      'circle-color': orange,\n    },\n  },\n  // Midpoint\n  //   Visible when editing polygons and lines\n  //   Tapping or dragging them adds a new vertex to the feature\n  {\n    'id': 'gl-draw-midpoint',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', 'meta', 'midpoint'],\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': orange,\n    },\n  },\n];\n","import * as Constants from '../constants.js';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n","/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class\n * @param {number} x the x-coordinate. This could be longitude or screen pixels, or any other sort of unit.\n * @param {number} y the y-coordinate. This could be latitude or screen pixels, or any other sort of unit.\n *\n * @example\n * const point = new Point(-77, 38);\n */\nexport default function Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    mult(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    div(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround(a, p) { return this.clone()._rotateAround(a, p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {[number, number, number, number]} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round() { return this.clone()._round(); },\n\n    /**\n     * Return the magnitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {number} magnitude\n     */\n    mag() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    dist(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    distSqr(p) {\n        const dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {number} angle\n     */\n    angle() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleTo(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleWith(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /**\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {number} x the x-coordinate\n     * @param {number} y the y-coordinate\n     * @return {number} the angle in radians\n     */\n    angleWithSep(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    /** @param {[number, number, number, number]} m */\n    _matMult(m) {\n        const x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _add(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _sub(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    /** @param {number} k */\n    _mult(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    /** @param {number} k */\n    _div(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _multByPoint(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _divByPoint(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp() {\n        const y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    /** @param {number} angle */\n    _rotate(angle) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /**\n     * @param {number} angle\n     * @param {Point} p\n     */\n    _rotateAround(angle, p) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    },\n\n    constructor: Point\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, return it unchanged.\n * @param {Point | [number, number] | {x: number, y: number}} p input value\n * @return {Point} constructed point.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (p) {\n    if (p instanceof Point) {\n        return /** @type {Point} */ (p);\n    }\n    if (Array.isArray(p)) {\n        return new Point(+p[0], +p[1]);\n    }\n    if (p.x !== undefined && p.y !== undefined) {\n        return new Point(+p.x, +p.y);\n    }\n    throw new Error('Expected [x, y] or {x, y} point format');\n};\n","import Point from '@mapbox/point-geometry';\n\n/**\n * Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}\n */\nfunction mouseEventPoint(mouseEvent, container) {\n  const rect = container.getBoundingClientRect();\n  return new Point(\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\n  );\n}\n\nexport default mouseEventPoint;\n","import * as Constants from '../constants.js';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\n\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n","import * as Constants from '../constants.js';\n\nexport default function(parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n","import createVertex from './create_vertex.js';\nimport createMidpoint from './create_midpoint.js';\nimport * as Constants from '../constants.js';\n\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const { type, coordinates } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n\n  let supplementaryPoints = [];\n\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(\n      createVertex(featureId, coordinates, basePath, isSelectedPath(basePath))\n    );\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(\n        line,\n        basePath !== null ? `${basePath}.${lineIndex}` : String(lineIndex)\n      );\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n\n  function processLine(line, lineBasePath) {\n    let firstPointString = \"\";\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath =\n        lineBasePath !== undefined && lineBasePath !== null\n          ? `${lineBasePath}.${pointIndex}`\n          : String(pointIndex);\n      const vertex = createVertex(\n        featureId,\n        point,\n        pointPath,\n        isSelectedPath(pointPath)\n      );\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, \"\");\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates,\n        },\n      };\n      supplementaryPoints = supplementaryPoints.concat(\n        createSupplementaryPoints(subFeature, options, index)\n      );\n    });\n  }\n\n  const userProperties = Object.keys(geojson.properties).filter((k) =>\n    k.includes(\"user_\")\n  );\n\n  supplementaryPoints.forEach((p) => {\n    userProperties.forEach((k) => {\n      p.properties[k] = geojson.properties[k];\n    });\n  });\n\n  return supplementaryPoints;\n}\n\nexport default createSupplementaryPoints;\n","export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n","import * as Constants from '../constants.js';\n\nconst {\n  LAT_MIN,\n  LAT_MAX,\n  LAT_RENDERED_MIN,\n  LAT_RENDERED_MAX,\n  LNG_MIN,\n  LNG_MAX,\n} = Constants;\nfunction extent(feature) {\n  const depth = {\n    Point: 0,\n    LineString: 1,\n    Polygon: 2,\n    MultiPoint: 1,\n    MultiLineString: 2,\n    MultiPolygon: 3,\n  }[feature.geometry.type];\n\n  const coords = [feature.geometry.coordinates].flat(depth);\n  const lngs = coords.map(coord => coord[0]);\n  const lats = coords.map(coord => coord[1]);\n  const min = vals => Math.min.apply(null, vals);\n  const max = vals => Math.max.apply(null, vals);\n  return [min(lngs), min(lats), max(lngs), max(lats)];\n}\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nexport default function(geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n\n  geojsonFeatures.forEach((feature) => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n\n  return constrainedDelta;\n}\n","import constrainFeatureMovement from './constrain_feature_movement.js';\nimport * as Constants from '../constants.js';\n\nexport default function(features, delta) {\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n}\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport mouseEventPoint from '../lib/mouse_event_point.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport StringSet from '../lib/string_set.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport moveFeatures from '../lib/move_features.js';\nimport * as Constants from '../constants.js';\n\nconst SimpleSelect = {};\n\nSimpleSelect.onSetup = function(opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoving: false,\n    canDragMove: false,\n    initialDragPanState: this.map.dragPan.isEnabled(),\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\n  this.fireActionable();\n\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n\n  return state;\n};\n\nSimpleSelect.fireUpdate = function() {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nSimpleSelect.fireActionable = function() {\n  const selectedFeatures = this.getSelected();\n\n  const multiFeatures = selectedFeatures.filter(\n    feature => this.isInstanceOf('MultiFeature', feature)\n  );\n\n  let combineFeatures = false;\n\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach((feature) => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n\n  this.setActionableState({\n    combineFeatures, uncombineFeatures, trash\n  });\n};\n\nSimpleSelect.getUniqueIds = function(allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id)\n    .filter(id => id !== undefined)\n    .reduce((memo, id) => {\n      memo.add(id);\n      return memo;\n    }, new StringSet());\n\n  return ids.values();\n};\n\nSimpleSelect.stopExtendedInteractions = function(state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n\n  if ((state.canDragMove || state.canBoxSelect) && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\n\nSimpleSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n};\n\nSimpleSelect.onMouseMove = function(state, e) {\n  const isFeature = CommonSelectors.isFeature(e);\n  if (isFeature && state.dragMoving) this.fireUpdate();\n\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  this.stopExtendedInteractions(state);\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\n\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.clickOnVertex = function(state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n};\n\nSimpleSelect.startOnActiveFeature = function(state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state);\n\n  // Disable map.dragPan immediately so it can't start\n  this.map.dragPan.disable();\n\n  // Re-render it and enable drag move\n  this.doRender(e.featureTarget.properties.id);\n\n  // Set up the state for drag moving\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.clickOnFeature = function(state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId);\n\n  // Click (without shift) on any selected feature but a point\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId\n    });\n  }\n\n  // Shift-click on a selected feature\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    }\n  // Shift-click on an unselected feature\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  }\n\n  // No matter what, re-render the clicked feature\n  this.doRender(featureId);\n};\n\nSimpleSelect.onMouseDown = function(state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\n\nSimpleSelect.startBoxSelect = function(state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable();\n  // Enable box select\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\n\nSimpleSelect.onTouchStart = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\n\nSimpleSelect.onDrag = function(state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\n\nSimpleSelect.whileBoxSelect = function(state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n\n  // Create the box node if it doesn't exist\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  }\n\n  // Adjust the box node's width and xy position\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\n\nSimpleSelect.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.onTouchEnd = SimpleSelect.onMouseUp = function(state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [\n      state.boxSelectStartLocation,\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\n    ];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox)\n      .filter(id => !this.isSelected(id));\n\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n    }\n  }\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\n\nSimpleSelect.onTrash = function() {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\n\nSimpleSelect.onCombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n\n  const coordinates = [], featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach((subcoords) => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n\n    featuresCombined.push(feature.toGeoJSON());\n  }\n\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates\n      }\n    });\n\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\n    this.setSelected([multiFeature.id]);\n\n    this.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n  this.fireActionable();\n};\n\nSimpleSelect.onUncombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n\n  const createdFeatures = [];\n  const featuresUncombined = [];\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach((subFeature) => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, { silent: true });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n\n  if (createdFeatures.length > 1) {\n    this.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n  this.fireActionable();\n};\n\nexport default SimpleSelect;\n","import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport moveFeatures from '../lib/move_features.js';\n\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\n\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function() {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nDirectSelect.fireActionable = function(state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\n\nDirectSelect.startDragging = function(state, e) {\n  if (state.initialDragPanState == null) {\n    state.initialDragPanState = this.map.dragPan.isEnabled();\n  }\n\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.stopDragging = function(state) {\n  if (state.canDragMove && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n\n  state.initialDragPanState = null;\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\n\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\n\nDirectSelect.onMidpoint = function(state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\n\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\n};\n\nDirectSelect.onFeature = function(state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\n  else this.stopDragging(state);\n};\n\nDirectSelect.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.dragVertex = function(state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\n\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function(opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\n  };\n\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return state;\n};\n\nDirectSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\n\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\n\nDirectSelect.onTrash = function(state) {\n  if (state.selectedCoordPaths.length === 0) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  } else {\n    // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n    // in reverse order so that we can remove by index safely.\n    state.selectedCoordPaths\n      .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\n      .forEach(id => state.feature.removeCoordinate(id));\n    this.fireUpdate();\n    state.selectedCoordPaths = [];\n    this.clearSelectedCoordinates();\n    this.fireActionable(state);\n    if (state.feature.isValid() === false) {\n      this.deleteFeature([state.featureId]);\n      this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n    }\n  }\n};\n\nDirectSelect.onMouseMove = function(state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const isMidPoint = isMidpoint(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\n\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\n\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\n\nDirectSelect.onDrag = function(state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\n  else this.dragFeature(state, e, delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.onClick = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\n\nDirectSelect.onTap = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\n\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\n\nexport default DirectSelect;\n\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport * as Constants from '../constants.js';\n\nconst DrawPoint = {};\n\nDrawPoint.onSetup = function() {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n\n  this.addFeature(point);\n\n  this.clearSelectedFeatures();\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POINT);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return { point };\n};\n\nDrawPoint.stopDrawingAndRemove = function(state) {\n  this.deleteFeature([state.point.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\n};\n\nDrawPoint.onStop = function(state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], { silent: true });\n  }\n};\n\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\n\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\n\nDrawPoint.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\n\nexport default DrawPoint;\n","function isEventAtCoordinates(event, coordinates) {\n  if (!event.lngLat) return false;\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\n}\n\nexport default isEventAtCoordinates;\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\nimport createVertex from '../lib/create_vertex.js';\n\nconst DrawPolygon = {};\n\nDrawPolygon.onSetup = function() {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nDrawPolygon.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  state.currentVertexPosition++;\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n};\n\nDrawPolygon.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nDrawPolygon.onMouseMove = function(state, e) {\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  return this.clickAnywhere(state, e);\n};\n\nDrawPolygon.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n};\n\nDrawPolygon.onStop = function(state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.polygon.id) === undefined) return;\n\n  //remove last added coordinate\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\n  if (state.polygon.isValid()) {\n    this.fire(Constants.events.CREATE, {\n      features: [state.polygon.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  // Don't render a polygon until it has two positions\n  // (and a 3rd which is just the first repeated)\n  if (geojson.geometry.coordinates.length === 0) return;\n\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n  // 2 coordinates after selecting a draw type\n  // 3 after creating the first point\n  if (coordinateCount < 3) {\n    return;\n  }\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\n  if (coordinateCount > 3) {\n    // Add a start position marker to the map, clicking on this will finish the feature\n    // This should only be shown when we're in a valid spot\n    const endPos = geojson.geometry.coordinates[0].length - 3;\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\n  }\n  if (coordinateCount <= 4) {\n    // If we've only drawn two positions (plus the closer),\n    // make a LineString instead of a Polygon\n    const lineCoordinates = [\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\n    ];\n    // create an initial vertex so that we can track the first point on mobile devices\n    display({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: geojson.properties,\n      geometry: {\n        coordinates: lineCoordinates,\n        type: Constants.geojsonTypes.LINE_STRING\n      }\n    });\n    if (coordinateCount === 3) {\n      return;\n    }\n  }\n  // render the Polygon\n  return display(geojson);\n};\n\nDrawPolygon.onTrash = function(state) {\n  this.deleteFeature([state.polygon.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nexport default DrawPolygon;\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport createVertex from '../lib/create_vertex.js';\n\nconst DrawLineString = {};\n\nDrawLineString.onSetup = function(opts) {\n  opts = opts || {};\n  const featureId = opts.featureId;\n\n  let line, currentVertexPosition;\n  let direction = 'forward';\n  if (featureId) {\n    line = this.getFeature(featureId);\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n    let from = opts.from;\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n    const lastCoord = line.coordinates.length - 1;\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      currentVertexPosition = lastCoord + 1;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      direction = 'backwards';\n      currentVertexPosition = 0;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    line,\n    currentVertexPosition,\n    direction\n  };\n};\n\nDrawLineString.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\n\nDrawLineString.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n};\n\nDrawLineString.onMouseMove = function(state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\n\nDrawLineString.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\n\nDrawLineString.onStop = function(state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.line.id) === undefined) return;\n\n  //remove last added coordinate\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\n  if (state.line.isValid()) {\n    this.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawLineString.onTrash = function(state) {\n  this.deleteFeature([state.line.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\n  const isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson);\n  // Only render the line if it has at least one real coordinate\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(\n    state.line.id,\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\n    false\n  ));\n\n  display(geojson);\n};\n\nexport default DrawLineString;\n","\nimport simple_select from './simple_select.js';\nimport direct_select from './direct_select.js';\nimport draw_point from './draw_point.js';\nimport draw_polygon from './draw_polygon.js';\nimport draw_line_string from './draw_line_string.js';\n\nexport default {\n  simple_select,\n  direct_select,\n  draw_point,\n  draw_polygon,\n  draw_line_string,\n};\n","import * as Constants from './constants.js';\n\nimport styles from './lib/theme.js';\nimport modes from './modes/index.js';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false,\n  suppressAPIEvents: true\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return Object.assign({}, style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: (sourceBucket === 'hot') ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = Object.assign({}, options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = Object.assign({}, hideControls, options.controls);\n  } else {\n    withDefaults.controls = Object.assign({}, showControls, options.controls);\n  }\n\n  withDefaults = Object.assign({}, defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n\n  return withDefaults;\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","export default function(a, b) {\n  if (a.length !== b.length) return false;\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\n}\n","import isEqual from 'fast-deep-equal';\nimport normalize from '@mapbox/geojson-normalize';\nimport {generateID} from './lib/id.js';\nimport featuresAt from './lib/features_at.js';\nimport stringSetsAreEqual from './lib/string_sets_are_equal.js';\nimport * as Constants from './constants.js';\nimport StringSet from './lib/string_set.js';\n\nimport Polygon from './feature_types/polygon.js';\nimport LineString from './feature_types/line_string.js';\nimport Point from './feature_types/point.js';\nimport MultiFeature from './feature_types/multi_feature.js';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function(ctx, api) {\n  api.modes = Constants.modes;\n\n  // API doesn't emit events by default\n  const silent = ctx.options.suppressAPIEvents !== undefined ? !!ctx.options.suppressAPIEvents : true;\n\n  api.getFeatureIdsAt = function(point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function() {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function(featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function(geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || generateID();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature, { silent });\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        const originalProperties = internalFeature.properties;\n        internalFeature.properties = feature.properties;\n        if (!isEqual(originalProperties, feature.properties)) {\n          ctx.store.featureChanged(internalFeature.id, { silent });\n        }\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function(id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function(featureIds) {\n    ctx.store.delete(featureIds, { silent });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function() {\n    ctx.store.delete(ctx.store.getAllIds(), { silent });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function(mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent });\n    return api;\n  };\n\n  api.getMode = function() {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function() {\n    ctx.events.trash({ silent });\n    return api;\n  };\n\n  api.combineFeatures = function() {\n    ctx.events.combineFeatures({ silent });\n    return api;\n  };\n\n  api.uncombineFeatures = function() {\n    ctx.events.uncombineFeatures({ silent });\n    return api;\n  };\n\n  api.setFeatureProperty = function(featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value, { silent });\n    return api;\n  };\n\n  return api;\n}\n","import runSetup from './src/setup.js';\nimport setupOptions from './src/options.js';\nimport setupAPI from './src/api.js';\nimport modes from './src/modes/index.js';\nimport * as Constants from './src/constants.js';\nimport * as lib from './src/lib/index.js';\n\nconst setupDraw = function(options, api) {\n  options = setupOptions(options);\n\n  const ctx = {\n    options\n  };\n\n  api = setupAPI(ctx, api);\n  ctx.api = api;\n\n  const setup = runSetup(ctx);\n\n  api.onAdd = setup.onAdd;\n  api.onRemove = setup.onRemove;\n  api.types = Constants.types;\n  api.options = options;\n\n  return api;\n};\n\nfunction MapboxDraw(options) {\n  setupDraw(options, this);\n}\n\nMapboxDraw.modes = modes;\nMapboxDraw.constants = Constants;\nMapboxDraw.lib = lib;\n\nexport default MapboxDraw;\n"],"names":["ModeHandler","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","handles","iHandle","length","handle","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","wgs84","RADIUS","FLATTENING","POLAR_RADIUS","require$$0","polygonArea","coords","area","Math","abs","ringArea","i","p1","p2","lowerIndex","middleIndex","upperIndex","coordsLength","rad","sin","_","PI","geojsonArea","geometry","type","coordinates","geometries","ring","classes","CANVAS","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","sources","HOT","COLD","cursors","ADD","MOVE","DRAG","POINTER","NONE","types","POLYGON","LINE","POINT","geojsonTypes","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","modes","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","events","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","updateActions","CHANGE_PROPERTIES","CHANGE_COORDINATES","meta","MIDPOINT","VERTEX","activeStates","ACTIVE","INACTIVE","interactions","FEATURE_SORT_RANKS","Point","LineString","MultiLineString","Polygon","comparator","a","b","score","Constants.geojsonTypes","sortFeatures","features","map","feature","property","sort","mapEventToBoundingBox","mapEvent","buffer","point","x","y","StringSet","items","this","_items","_nums","_length","l","add","prototype","has","delete","values","Object","keys","forEach","k","v","JSON","parse","clear","META_TYPES","Constants.meta","featuresAt","bbox","options","clickBuffer","touch","touchBuffer","box","queryParams","styles","layers","s","filter","getLayer","queryRenderedFeatures","indexOf","properties","featureIds","uniqueFeatures","featureId","getFeatureAtAndSetCursors","mouse","Constants.cursors","active","Constants.activeStates","currentModeName","queueMapClasses","euclideanDistance","sqrt","isClick","end","fineTolerance","grossTolerance","interval","time","moveDistance","isTap","tolerance","nanoid","alphabet","defaultSize","size","random","customAlphabet","generateID","Feature","geojson","changed","incomingCoords","setCoordinates","getCoordinates","stringify","setProperty","value","toGeoJSON","internal","userProperties","name","create","isValid","updateCoordinate","pathOrLng","lngOrLat","lat","arguments","getCoordinate","addCoordinate","path","lng","parseInt","splice","removeCoordinate","slice","every","ids","split","concat","parts","ringId","coordId","models","MultiPoint","MultiPolygon","takeAction","action","idx","tail","join","MultiFeature","model","TypeError","_coordinatesToFeatures","ModeInterface","drawConfig","_ctx","Model","bind","replace","f","getFeatures","setSelected","setSelectedCoordinates","reduce","m","c","feature_id","get","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","opts","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actions","newSet","actionable","changeMode","eventOpts","fire","eventData","updateUIClasses","activateUIButton","setActiveButton","bufferType","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","eventMapper","eventKeys","objectToMode","modeObject","modeObjectKeys","startOpts","state","key","modeHandler","eh","e","onCombineFeatures","onUncombineFeatures","toDenseArray","getSource","Constants.sources","cleanup","newHotIds","newColdIds","isDirty","getAllIds","getChangedIds","hot","lastColdCount","cold","parent","coldChanged","renderFeature","source","featureInternal","currentModeRender","clearChangedIds","setData","Store","renderRequest","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_emitSelectionChange","_mapInitialConfig","requestAnimationFrame","Constants.events","points","getSelectedCoordinates","coordinate","refreshSelectedCoordinates","newSelectedCoordinates","silent","createRenderBatch","holdRender","numRenders","setDirty","featureCreated","suppressAPIEvents","Constants.updateActions","deletedFeaturesToEmit","getAll","coord_path","setFeatureProperty","storeMapConfig","Constants.interactions","interaction","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","classTypes","runSetup","controlContainer","mapLoadedInterval","setup","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","mouseDownInfo","touchStartInfo","currentMode","isDrag","Date","getTime","originalEvent","stopPropagation","mousedrag","endInfo","touchdrag","buttons","which","target","getFeaturesAndSetCursor","featureTarget","touchEnabled","preventDefault","isKeyModeValid","code","modename","nextModeOptions","eventOptions","modebuilder","setupModeHandler","srcElement","classList","contains","Constants.classes","keyCode","controls","Constants.modes","line_string","polygon","zoomend","changeZoom","data","dataType","some","style","actionState","defaultMode","addEventListener","keybindings","removeEventListener","getMode","buttonElements","activeButton","currentMapClasses","nextMapClasses","assign","classesToRemove","classesToAdd","remove","createControlButton","button","document","createElement","className","setAttribute","title","appendChild","deactivateButtons","onDeactivate","onActivate","addButtons","controlGroup","Constants.types","combine_features","uncombine_features","buttonId","getContainer","boxSelect","dragPanIsEnabled","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","blue","orange","white","paint","layout","isOfMetaType","isShiftMousedown","shiftKey","isActiveFeature","isInactiveFeature","noTarget","isFeature","isVertex","isShiftDown","isEscapeKey","isEnterKey","mouseEventPoint","mouseEvent","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","createVertex","parentId","selected","createMidpoint","startVertex","endVertex","startCoord","endCoord","mid","createSupplementaryPoints","basePath","supplementaryPoints","processLine","line","lineBasePath","firstPointString","lastVertex","pointIndex","pointPath","String","vertex","isSelectedPath","midpoints","midpoint","stringifiedPoint","selectedPaths","lineIndex","subType","subCoordinates","index","subFeature","processMultiGeometry","includes","p","clone","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","angleWith","angleWithSep","cos","constructor","convert","Array","isArray","doubleClickZoom","setTimeout","LAT_MIN","LAT_MAX","LAT_RENDERED_MIN","LAT_RENDERED_MAX","LNG_MIN","LNG_MAX","Constants","constrainFeatureMovement","geojsonFeatures","delta","northInnerEdge","southInnerEdge","northOuterEdge","southOuterEdge","westEdge","eastEdge","bounds","depth","flat","lngs","coord","lats","min","vals","apply","max","extent","featureSouthEdge","featureNorthEdge","featureWestEdge","featureEastEdge","constrainedDelta","ceil","moveFeatures","currentCoordinates","moveCoordinate","moveRing","moveMultiPolygon","multi","nextCoordinates","SimpleSelect","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initialDragPanState","initiallySelectedFeatureIds","fireActionable","selectedFeatures","multiFeatures","featureType","allFeatures","memo","CommonSelectors.isFeature","fireUpdate","stopExtendedInteractions","CommonSelectors.noTarget","clickAnywhere","CommonSelectors.isOfMetaType","clickOnVertex","clickOnFeature","wasSelected","coordPath","startPos","lngLat","startOnActiveFeature","isShiftClick","CommonSelectors.isShiftDown","selectedFeatureIds","isFeatureSelected","CommonSelectors.isActiveFeature","CommonSelectors.isShiftMousedown","startBoxSelect","dragMove","whileBoxSelect","current","minX","maxX","minY","maxY","translateValue","transform","WebkitTransform","width","height","featuresInBox","idsToSelect","getUniqueIds","display","featuresCombined","subcoords","multiFeature","createdFeatures","deletedFeatures","featuresUncombined","isMidpoint","DirectSelect","selectedCoordPaths","startDragging","about","selectedIndex","selectedCoordinates","pathsToCoordinates","paths","stopDragging","selectedCoords","localeCompare","numeric","onVertex","isMidPoint","noCoords","onFeature","onMidpoint","dragVertex","dragFeature","clickNoTarget","clickActiveFeature","clickInactive","DrawPoint","isEventAtCoordinates","stopDrawingAndRemove","isActivePoint","CommonSelectors.isEscapeKey","CommonSelectors.isEnterKey","DrawPolygon","currentVertexPosition","CommonSelectors.isVertex","isActivePolygon","coordinateCount","endPos","lineCoordinates","DrawLineString","direction","from","lastCoord","isActiveLine","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","defaultOptions","displayControlsDefault","showControls","hideControls","addSources","sourceBucket","fastDeepEqual","equal","RegExp","flags","valueOf","toString","hasOwnProperty","geojsonNormalize","gj","GeometryCollection","FeatureCollection","stringSetsAreEqual","featureTypes","setupDraw","api","withDefaults","setupOptions","getFeatureIdsAt","getSelectedPoints","set","featureCollection","renderBatch","toDelete","newIds","newIdsLookup","normalize","internalFeature","originalProperties","isEqual","deleteAll","modeOptions","setupAPI","MapboxDraw","constants","lib"],"mappings":"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","x_google_ignoreList":[1,2,13,30,46,47]}